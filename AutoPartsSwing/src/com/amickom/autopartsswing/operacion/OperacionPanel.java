/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OperacionPanel.java
 *
 * Created on 31-ene-2012, 8:37:36
 */
package com.amickom.autopartsswing.operacion;

import com.amickom.autopartdao.dto.Cliente;
import com.amickom.autopartdao.dto.Proveedor;
import com.amickom.autopartdao.dto.VentasUtilidadDTO;
import com.amickom.autopartdao.dto.VentasxClienteDTO;
import com.amickom.autopartdao.dto.VentasxProveedorDTO;
import com.amickom.autopartsswing.AutoPartsSwingApp;
import com.amickom.autopartsswing.UtilsSwing;
import com.amickom.autopartsswing.listener.SeleccionModelListener;
import com.amickom.autopartsswing.operacion.pedido.ConfirmacionFrame;
import com.amickom.service.IClienteService;
import com.amickom.service.IProductoService;
import com.amickom.service.IProveedorService;
import com.amickom.service.IReportService;
import com.amickom.service.exception.RefaccionariaException;
import com.amickom.service.impl.ClienteService;
import com.amickom.service.impl.ProductoService;
import com.amickom.service.impl.ProveedorService;
import com.amickom.service.impl.ReporteService;
import com.amickom.service.util.Constantes;
import com.amickom.service.util.Formatter;
import com.amickom.service.util.TableModelProductos;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;

import java.math.BigDecimal;
import java.util.List;
import javax.swing.InputMap;
import javax.swing.InputVerifier;
import javax.swing.KeyStroke;

/**
 *
 * @author GRUPO HERA HP2
 */
public class OperacionPanel extends javax.swing.JPanel {

    /**
     * Servicios del cliente
     */
    public IClienteService clienteService;
    /**
     * Servicios del proveedor
     */
    public IProveedorService proveedorService;
    private IReportService reporteService;
    public Cliente cliente;
    public Proveedor proveedor;
    private InputMap im;
    /**
     * Servicios referentes a los productos
     */
    public IProductoService productosService;
    private static Logger logger = Logger.getLogger(OperacionPanel.class);
    private AutoPartsSwingApp app;

    /** Creates new form OperacionPanel */
    public OperacionPanel(AutoPartsSwingApp app) {
        this.app = app;
        //this.im = new InputMap();
        //im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
        //im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");
        clienteService = (ClienteService) app.ctx.getBean("clienteService");
        proveedorService = (ProveedorService) app.ctx.getBean("proveedorService");
        productosService = (ProductoService) app.ctx.getBean("productosService");
        reporteService = (ReporteService) app.ctx.getBean("reporteService");
        initComponents();
        try {
            ComboBoxModel model = clienteService.obtieneModelCliente();
            ComboBoxModel model2 = clienteService.obtieneModelCliente();
            jComboBox4.setModel(model);
            jComboBox5.setModel(model2);
        } catch (RefaccionariaException ex) {
            logger.error("Error al obtener el modelo de clientes "
                    + ex.getMessage(), ex);
        }
        try {
            jComboBox2.setModel(proveedorService.obtieneModelProveedor());
            jComboBox3.setModel(proveedorService.obtieneModelProveedor());
            jComboBox10.setModel(proveedorService.obtieneModelProveedorConsulta());
        } catch (RefaccionariaException ex) {
            logger.error("Error al obtener el modelo de proveedores "
                    + ex.getMessage(), ex);
        }
        try {
            jComboBox1.setModel(productosService.obtieneMarcas());
        } catch (RefaccionariaException ex) {
            logger.error("Error al obtener el modelo de marcas "
                    + ex.getMessage(), ex);
        }
        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton2);
        buttonGroup1.add(jRadioButton4);
        jTextField2.setEnabled(false);
        //jButton11.setInputMap(0, this.im);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton12 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jComboBox3 = new javax.swing.JComboBox();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jCalendarButton3 = new org.sourceforge.jcalendarbutton.JCalendarButton();
        jCalendarButton4 = new org.sourceforge.jcalendarbutton.JCalendarButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jButton10 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jCalendarButton2 = new org.sourceforge.jcalendarbutton.JCalendarButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jPanel15 = new javax.swing.JPanel();
        jComboBox8 = new javax.swing.JComboBox();
        jPanel17 = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jTextField8 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jCalendarButton1 = new org.sourceforge.jcalendarbutton.JCalendarButton();
        jPanel11 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel14 = new javax.swing.JPanel();
        jComboBox7 = new javax.swing.JComboBox();
        jPanel16 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jFileChooser1.setCurrentDirectory(new java.io.File("E:\\proyectos\\externo\\refaccionaria"));
        jFileChooser1.setName("jFileChooser1"); // NOI18N

        jFileChooser2.setCurrentDirectory(new java.io.File("E:\\proyectos\\externo\\refaccionaria"));
        jFileChooser2.setName("jFileChooser2"); // NOI18N

        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(894, 459));

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        jPanel6.setEnabled(false);
        jPanel6.setName("jPanel6"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.amickom.autopartsswing.AutoPartsSwingApp.class).getContext().getResourceMap(OperacionPanel.class);
        jComboBox4.setFont(resourceMap.getFont("jComboBox4.font")); // NOI18N
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.amickom.autopartsswing.AutoPartsSwingApp.class).getContext().getActionMap(OperacionPanel.class, this);
        jComboBox4.setAction(actionMap.get("seleccionarProveedorPedido")); // NOI18N
        jComboBox4.setName("jComboBox4"); // NOI18N

        jLabel33.setFont(resourceMap.getFont("jLabel33.font")); // NOI18N
        jLabel33.setText(resourceMap.getString("jLabel33.text")); // NOI18N
        jLabel33.setName("jLabel33"); // NOI18N

        jLabel34.setFont(resourceMap.getFont("jLabel34.font")); // NOI18N
        jLabel34.setText(resourceMap.getString("jLabel34.text")); // NOI18N
        jLabel34.setName("jLabel34"); // NOI18N

        jTextField24.setFont(resourceMap.getFont("jTextField24.font")); // NOI18N
        jTextField24.setEnabled(false);
        jTextField24.setName("jTextField24"); // NOI18N
        jTextField24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField24KeyPressed(evt);
            }
        });

        jButton11.setAction(actionMap.get("obtenerProductos")); // NOI18N
        jButton11.setFont(resourceMap.getFont("jButton11.font")); // NOI18N
        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setEnabled(false);
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton11KeyPressed(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jComboBox1.setFont(resourceMap.getFont("jComboBox1.font")); // NOI18N
        jComboBox1.setEnabled(false);
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        jButton12.setAction(actionMap.get("ventanaEmergente")); // NOI18N
        jButton12.setFont(resourceMap.getFont("jButton12.font")); // NOI18N
        jButton12.setText(resourceMap.getString("jButton12.text")); // NOI18N
        jButton12.setName("jButton12"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setFont(resourceMap.getFont("jTable2.font")); // NOI18N
        try {
            jTable2.setModel(null);
        }
        catch (Exception e) {
            jTable2.setModel(new DefaultTableModel());
        }
        //jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        /**ListSelectionModel lsmrow = jTable2.getSelectionModel();
        com.amickom.service.util.SeleccionModelListener sel = new com.amickom.service.util.SeleccionModelListener();
        lsmrow.addListSelectionListener(sel);**/
        jTable2.setAutoscrolls(false);
        jTable2.setEnabled(false);
        jTable2.setName("jTable2"); // NOI18N
        jScrollPane2.setViewportView(jTable2);

        jLabel27.setFont(resourceMap.getFont("jLabel27.font")); // NOI18N
        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N

        jComboBox10.setFont(resourceMap.getFont("jComboBox10.font")); // NOI18N
        jComboBox10.setEnabled(false);
        jComboBox10.setName("jComboBox10"); // NOI18N
        jComboBox10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox10KeyPressed(evt);
            }
        });

        jLabel31.setFont(resourceMap.getFont("jLabel31.font")); // NOI18N
        jLabel31.setText(resourceMap.getString("jLabel31.text")); // NOI18N
        jLabel31.setName("jLabel31"); // NOI18N

        jTextField25.setFont(resourceMap.getFont("jTextField25.font")); // NOI18N
        jTextField25.setText(resourceMap.getString("jTextField25.text")); // NOI18N
        jTextField25.setEnabled(false);
        jTextField25.setName("jTextField25"); // NOI18N
        jTextField25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField25KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel33)
                            .addComponent(jLabel27)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField24, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox10, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox4, 0, 283, Short.MAX_VALUE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                                .addComponent(jButton11))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField25, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N

        jPanel8.setBorder(new javax.swing.border.LineBorder(resourceMap.getColor("jPanel8.border.lineColor"), 1, true)); // NOI18N
        jPanel8.setForeground(resourceMap.getColor("jPanel8.foreground")); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N

        jRadioButton1.setAction(actionMap.get("ventasPorCasa")); // NOI18N
        jRadioButton1.setFont(resourceMap.getFont("jRadioButton1.font")); // NOI18N
        jRadioButton1.setText(resourceMap.getString("jRadioButton1.text")); // NOI18N
        jRadioButton1.setName("jRadioButton1"); // NOI18N

        jRadioButton2.setAction(actionMap.get("ventasPorCliente")); // NOI18N
        jRadioButton2.setFont(resourceMap.getFont("jRadioButton2.font")); // NOI18N
        jRadioButton2.setText(resourceMap.getString("jRadioButton2.text")); // NOI18N
        jRadioButton2.setName("jRadioButton2"); // NOI18N

        jRadioButton4.setAction(actionMap.get("ventasPorFecha")); // NOI18N
        jRadioButton4.setFont(resourceMap.getFont("jRadioButton4.font")); // NOI18N
        jRadioButton4.setText(resourceMap.getString("jRadioButton4.text")); // NOI18N
        jRadioButton4.setActionCommand(resourceMap.getString("jRadioButton4.actionCommand")); // NOI18N
        jRadioButton4.setName("jRadioButton4"); // NOI18N

        jComboBox3.setFont(resourceMap.getFont("jComboBox3.font")); // NOI18N
        jComboBox3.setEnabled(false);
        jComboBox3.setName("jComboBox3"); // NOI18N

        jTextField22.setEditable(false);
        jTextField22.setFont(resourceMap.getFont("jTextField22.font")); // NOI18N
        jTextField22.setText(resourceMap.getString("jTextField22.text")); // NOI18N
        jTextField22.setName("jTextField22"); // NOI18N

        jTextField23.setEditable(false);
        jTextField23.setFont(resourceMap.getFont("jTextField23.font")); // NOI18N
        jTextField23.setText(resourceMap.getString("jTextField23.text")); // NOI18N
        jTextField23.setName("jTextField23"); // NOI18N

        jCalendarButton3.setText(resourceMap.getString("jCalendarButton3.text")); // NOI18N
        jCalendarButton3.setEnabled(false);
        jCalendarButton3.setName("jCalendarButton3"); // NOI18N

        jCalendarButton4.setEnabled(false);
        jCalendarButton4.setName("jCalendarButton4"); // NOI18N

        jLabel24.setFont(resourceMap.getFont("jLabel24.font")); // NOI18N
        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N

        jLabel25.setFont(resourceMap.getFont("jLabel25.font")); // NOI18N
        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N

        jComboBox5.setFont(resourceMap.getFont("jComboBox5.font")); // NOI18N
        jComboBox5.setEnabled(false);
        jComboBox5.setName("jComboBox5"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton4))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel24))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField23, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.Alignment.TRAILING, 0, 253, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCalendarButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCalendarButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(232, 232, 232))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCalendarButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCalendarButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25))))
                    .addComponent(jRadioButton4))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jCalendarButton3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateOnlyPopupChangedR1(evt);
            }
        });
        jCalendarButton4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateOnlyPopupChangedR2(evt);
            }
        });

        jButton10.setAction(actionMap.get("generarReporte")); // NOI18N
        jButton10.setFont(resourceMap.getFont("jButton10.font")); // NOI18N
        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton10)
                        .addGap(373, 373, 373))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addGap(74, 74, 74))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        jPanel7.setName("jPanel7"); // NOI18N

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox2.setName("jComboBox2"); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        jLabel23.setFont(resourceMap.getFont("jLabel23.font")); // NOI18N
        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N

        jTextField21.setEditable(false);
        jTextField21.setFont(resourceMap.getFont("jTextField21.font")); // NOI18N
        jTextField21.setText(resourceMap.getString("jTextField21.text")); // NOI18N
        jTextField21.setName("jTextField21"); // NOI18N

        jButton7.setAction(actionMap.get("seleccionarArchivo1")); // NOI18N
        jButton7.setFont(resourceMap.getFont("jButton7.font")); // NOI18N
        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N

        jButton9.setAction(actionMap.get("actualizarCatalogo")); // NOI18N
        jButton9.setFont(resourceMap.getFont("jButton9.font")); // NOI18N
        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7))
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jButton9))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(73, 73, 73)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jTextField13.setFont(resourceMap.getFont("jTextField13.font")); // NOI18N
        jTextField13.setText(resourceMap.getString("jTextField13.text")); // NOI18N
        jTextField13.setName("jTextField13"); // NOI18N

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString("jPanel12.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel12.border.titleFont"))); // NOI18N
        jPanel12.setFont(resourceMap.getFont("jPanel12.font")); // NOI18N
        jPanel12.setName("jPanel12"); // NOI18N

        jTextField14.setFont(resourceMap.getFont("jTextField14.font")); // NOI18N
        jTextField14.setText(resourceMap.getString("jTextField14.text")); // NOI18N
        jTextField14.setName("jTextField14"); // NOI18N

        jLabel14.setFont(resourceMap.getFont("jLabel14.font")); // NOI18N
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jTextField15.setFont(resourceMap.getFont("jTextField15.font")); // NOI18N
        jTextField15.setText(resourceMap.getString("jTextField15.text")); // NOI18N
        jTextField15.setName("jTextField15"); // NOI18N

        jTextField16.setFont(resourceMap.getFont("jTextField16.font")); // NOI18N
        jTextField16.setText(resourceMap.getString("jTextField16.text")); // NOI18N
        jTextField16.setName("jTextField16"); // NOI18N

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        jLabel17.setFont(resourceMap.getFont("jLabel17.font")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        jTextField17.setEditable(false);
        jTextField17.setFont(resourceMap.getFont("jTextField17.font")); // NOI18N
        jTextField17.setText(resourceMap.getString("jTextField17.text")); // NOI18N
        jTextField17.setName("jTextField17"); // NOI18N

        jCalendarButton2.setName("jCalendarButton2"); // NOI18N

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCalendarButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCalendarButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jCalendarButton2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateOnlyPopupChangedProveedor(evt);
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString("jPanel13.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel13.border.titleFont"))); // NOI18N
        jPanel13.setName("jPanel13"); // NOI18N

        jLabel18.setFont(resourceMap.getFont("jLabel18.font")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        jTextField19.setFont(resourceMap.getFont("jTextField19.font")); // NOI18N
        jTextField19.setText(resourceMap.getString("jTextField19.text")); // NOI18N
        jTextField19.setName("jTextField19"); // NOI18N

        jLabel19.setFont(resourceMap.getFont("jLabel19.font")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        jTextField20.setFont(resourceMap.getFont("jTextField20.font")); // NOI18N
        jTextField20.setText(resourceMap.getString("jTextField20.text")); // NOI18N
        jTextField20.setName("jTextField20"); // NOI18N

        jLabel20.setFont(resourceMap.getFont("jLabel20.font")); // NOI18N
        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        jTextField18.setFont(resourceMap.getFont("jTextField18.font")); // NOI18N
        jTextField18.setText(resourceMap.getString("jTextField18.text")); // NOI18N
        jTextField18.setName("jTextField18"); // NOI18N

        jLabel28.setFont(resourceMap.getFont("jLabel28.font")); // NOI18N
        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N

        jComboBox11.setFont(resourceMap.getFont("jComboBox11.font")); // NOI18N
        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Si" }));
        jComboBox11.setAction(actionMap.get("seleccionaUtilidad")); // NOI18N
        jComboBox11.setName("jComboBox11"); // NOI18N

        jLabel29.setFont(resourceMap.getFont("jLabel29.font")); // NOI18N
        jLabel29.setText(resourceMap.getString("jLabel29.text")); // NOI18N
        jLabel29.setName("jLabel29"); // NOI18N

        jTextField2.setFont(resourceMap.getFont("jTextField2.font")); // NOI18N
        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        jLabel30.setFont(resourceMap.getFont("jLabel30.font")); // NOI18N
        jLabel30.setText(resourceMap.getString("jLabel30.text")); // NOI18N
        jLabel30.setName("jLabel30"); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel28)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30))
                    .addComponent(jTextField20, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel28)
                        .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29))
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30)))
                .addGap(43, 43, 43))
        );

        jButton2.setAction(actionMap.get("accionesProveedor")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setEditable(false);
        jTextField1.setFont(resourceMap.getFont("jTextField1.font")); // NOI18N
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jButton8.setAction(actionMap.get("seleccionaarchivo")); // NOI18N
        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N

        jLayeredPane3.setName("jLayeredPane3"); // NOI18N

        jPanel15.setName("jPanel15"); // NOI18N

        jComboBox8.setFont(resourceMap.getFont("jComboBox8.font")); // NOI18N
        jComboBox8.setAction(actionMap.get("obtenerDatosProveedor")); // NOI18N
        jComboBox8.setName("jComboBox8"); // NOI18N
        jComboBox8.setOpaque(false);
        jComboBox7.setVisible(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jComboBox8, 0, 290, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel15.setBounds(0, 0, 310, 40);
        jLayeredPane3.add(jPanel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel17.setName("jPanel17"); // NOI18N

        jTextField12.setFont(resourceMap.getFont("jTextField12.font")); // NOI18N
        jTextField12.setName("jTextField12"); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel17.setBounds(0, 0, 310, 40);
        jLayeredPane3.add(jPanel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jComboBox9.setFont(resourceMap.getFont("jComboBox9.font")); // NOI18N
        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alta", "Baja", "Cambio" }));
        jComboBox9.setAction(actionMap.get("seleccionarOperacionProveedor")); // NOI18N
        jComboBox9.setName("jComboBox9"); // NOI18N

        jLabel26.setFont(resourceMap.getFont("jLabel26.font")); // NOI18N
        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBox9, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLayeredPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)))
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(61, 61, 61)
                        .addComponent(jButton3)
                        .addGap(361, 361, 361))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addGap(284, 284, 284))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField3.setFont(resourceMap.getFont("jTextField3.font")); // NOI18N
        jTextField3.setText(resourceMap.getString("jTextField3.text")); // NOI18N
        jTextField3.setName("jTextField3"); // NOI18N

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString("jPanel10.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel10.border.titleFont"))); // NOI18N
        jPanel10.setFont(resourceMap.getFont("jPanel10.font")); // NOI18N
        jPanel10.setName("jPanel10"); // NOI18N

        jTextField8.setFont(resourceMap.getFont("jTextField8.font")); // NOI18N
        jTextField8.setText(resourceMap.getString("jTextField8.text")); // NOI18N
        jTextField8.setName("jTextField8"); // NOI18N

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jTextField9.setFont(resourceMap.getFont("jTextField9.font")); // NOI18N
        jTextField9.setText(resourceMap.getString("jTextField9.text")); // NOI18N
        jTextField9.setName("jTextField9"); // NOI18N

        jTextField10.setFont(resourceMap.getFont("jTextField10.font")); // NOI18N
        jTextField10.setText(resourceMap.getString("jTextField10.text")); // NOI18N
        jTextField10.setName("jTextField10"); // NOI18N

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setFont(resourceMap.getFont("jLabel11.font")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jTextField11.setEditable(false);
        jTextField11.setFont(resourceMap.getFont("jTextField11.font")); // NOI18N
        jTextField11.setText(resourceMap.getString("jTextField11.text")); // NOI18N
        jTextField11.setName("jTextField11"); // NOI18N

        jCalendarButton1.setText(resourceMap.getString("jCalendarButton1.text")); // NOI18N
        jCalendarButton1.setName("jCalendarButton1"); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField11, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCalendarButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField11)
                    .addComponent(jCalendarButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel11))
                .addGap(21, 21, 21))
        );

        jCalendarButton1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateOnlyPopupChanged(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), resourceMap.getString("jPanel11.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, resourceMap.getFont("jPanel11.border.titleFont"))); // NOI18N
        jPanel11.setName("jPanel11"); // NOI18N

        jTextField5.setFont(resourceMap.getFont("jTextField5.font")); // NOI18N
        jTextField5.setText(resourceMap.getString("jTextField5.text")); // NOI18N
        jTextField5.setName("jTextField5"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jTextField6.setFont(resourceMap.getFont("jTextField6.font")); // NOI18N
        jTextField6.setText(resourceMap.getString("jTextField6.text")); // NOI18N
        jTextField6.setName("jTextField6"); // NOI18N

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jTextField7.setFont(resourceMap.getFont("jTextField7.font")); // NOI18N
        jTextField7.setText(resourceMap.getString("jTextField7.text")); // NOI18N
        jTextField7.setName("jTextField7"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(59, 59, 59)))
                .addGap(74, 74, 74))
        );

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jButton4.setAction(actionMap.get("altacliente")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N

        jComboBox6.setFont(resourceMap.getFont("jComboBox6.font")); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alta", "Baja", "Cambio" }));
        jComboBox6.setAction(actionMap.get("seleccionarOperacionCliente")); // NOI18N
        jComboBox6.setName("jComboBox6"); // NOI18N

        jLabel21.setFont(resourceMap.getFont("jLabel21.font")); // NOI18N
        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N

        jLayeredPane2.setName("jLayeredPane2"); // NOI18N

        jPanel14.setName("jPanel14"); // NOI18N

        jComboBox7.setFont(resourceMap.getFont("jComboBox7.font")); // NOI18N
        jComboBox7.setAction(actionMap.get("obtenerDatosCliente")); // NOI18N
        jComboBox7.setName("jComboBox7"); // NOI18N
        jComboBox7.setOpaque(false);
        jComboBox7.setVisible(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jComboBox7, 0, 290, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel14.setBounds(0, 0, 310, 40);
        jLayeredPane2.add(jPanel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel16.setName("jPanel16"); // NOI18N

        jTextField4.setFont(resourceMap.getFont("jTextField4.font")); // NOI18N
        jTextField4.setName("jTextField4"); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel16Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel16.setBounds(0, 0, 310, 40);
        jLayeredPane2.add(jPanel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addGap(5, 5, 5))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox6, 0, 311, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(61, 61, 61)
                        .addComponent(jButton5)
                        .addGap(330, 330, 330))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4)))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(28, 28, 28))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName(resourceMap.getString("jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

private void jButton11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton11KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        obtenerProductos();
    }
}//GEN-LAST:event_jButton11KeyPressed

private void jTextField24KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField24KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        obtenerProductos();
    }
    // TODO add your handling code here:
}//GEN-LAST:event_jTextField24KeyPressed

private void jComboBox10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox10KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        obtenerProductos();
    }// TODO add your handling code here:
}//GEN-LAST:event_jComboBox10KeyPressed

private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        obtenerProductos();
    }// TODO add your handling code here:
}//GEN-LAST:event_jComboBox1KeyPressed

private void jTextField25KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField25KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        obtenerProductos();
    }// TODO add your handling code here:
}//GEN-LAST:event_jTextField25KeyPressed

    @Action
    public void seleccionaarchivo() {
        int returnVal = jFileChooser1.showOpenDialog(this);
        if (returnVal == jFileChooser1.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextAre
                jTextField1.setText(file.getAbsolutePath());
            } catch (Exception ex) {
                logger.error("Error al seleccionar archivo " + ex.getMessage(), ex);
            }
        } else {
            logger.error("Error al seleccionar archivo ");
        }
    }

    @Action
    public void altacliente() {
        String accion = (String) jComboBox6.getSelectedItem();
        if (accion.trim().equals("Alta")) {
            logger.debug("Realizando el alta de un cliente");
            realizarAltaCliente();
        } else if (accion.trim().equals("Baja")) {
            realizarBajaCliente();
        } else if (accion.trim().equals("Cambio")) {
            realizarActualizacionCliente();
        }
    }

    @Action
    public void accionesProveedor() {
        String accion = (String) jComboBox9.getSelectedItem();
        if (accion.trim().equals("Alta")) {
            logger.debug("Realizando el alta de un proveedor");
            altaProveedor();
        } else if (accion.trim().equals("Baja")) {
            realizarBajaProveedor();
        } else if (accion.trim().equals("Cambio")) {
            realizarActualizacionProveedor();
        }
    }

    public void realizarBajaCliente() {
        logger.debug("Realizando la baja del cliente");
        int i = UtilsSwing.confirmaOperacion(
                (JFrame) getParent().
                getParent().getParent().
                getParent().getParent(),
                "Desea eliminar el cliente ");
        if (i == 0) {
            try {
                if (clienteService.eliminaCliente((String) jComboBox7.getSelectedItem())) {
                    UtilsSwing.mensajeExito("Éxito al eliminar el cliente ",
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    limpiaAltaCliente();
                    try {
                        jComboBox7.setModel(clienteService.obtieneModelCliente());
                        ComboBoxModel model = clienteService.obtieneModelCliente();
                        ComboBoxModel model1 = clienteService.obtieneModelCliente();
                        jComboBox4.setModel(model);
                        jComboBox3.setModel(model1);
                    } catch (RefaccionariaException ex) {
                        logger.error("Error al obtener el modelo de clientes "
                                + ex.getMessage(), ex);
                    }
                } else {
                    UtilsSwing.mensajeError("Error al eliminar el cliente ",
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                logger.debug("Error al realizar la baja " + ex.getMessage(), ex);
                UtilsSwing.mensajeError("Error al eliminar el cliente ",
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
            }
        }
    }

    public void realizarBajaProveedor() {
        logger.debug("Realizando la baja del proveedor");
        int i = UtilsSwing.confirmaOperacion(
                (JFrame) getParent().
                getParent().getParent().
                getParent().getParent(),
                "Desea eliminar el proveedor ");
        if (i == 0) {
            try {
                if (proveedorService.eliminaProveedor((String) jComboBox8.getSelectedItem())) {
                    UtilsSwing.mensajeExito("Éxito al eliminar el proveedor ",
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    limpiaAltaProveedor();
                    try {
                        jComboBox8.setModel(proveedorService.obtieneModelProveedor());
                        ComboBoxModel model = proveedorService.obtieneModelProveedor();
                        ComboBoxModel model1 = proveedorService.obtieneModelProveedor();
                        jComboBox2.setModel(model);
                        jComboBox3.setModel(model1);
                        jComboBox10.setModel(proveedorService.obtieneModelProveedor());
                        jComboBox1.setModel(productosService.obtieneMarcas());
                    } catch (RefaccionariaException ex) {
                        logger.error("Error al obtener el modelo de proveedor "
                                + ex.getMessage(), ex);
                    }
                } else {
                    UtilsSwing.mensajeError("Error al eliminar el proveedor ",
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                logger.debug("Error al realizar la baja " + ex.getMessage(), ex);
                UtilsSwing.mensajeError("Error al eliminar el proveedor ",
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
            }
        }
    }

    public void realizarAltaCliente() {
        logger.debug("Realizando el alta de un cliente ");
        String leyenda = validarAltaCliente();
        if (leyenda.trim().equals("")) {
            Cliente clienteDTO = new Cliente();
            clienteDTO.setNombre(jTextField4.getText());
            clienteDTO.setRfc(jTextField3.getText());
            clienteDTO.setDireccion(jTextField5.getText());
            clienteDTO.setTelefono(jTextField8.getText());
            clienteDTO.setEmail(jTextField10.getText());
            clienteDTO.setFechaRegistro(jCalendarButton1.getTargetDate());
            clienteDTO.setCelular(jTextField9.getText());
            clienteDTO.setCiudad(jTextField7.getText());
            clienteDTO.setCp(jTextField6.getText());
            try {
                if (clienteService.insertaCliente(clienteDTO)) {
                    UtilsSwing.mensajeExito(Constantes.MENSAJE_EXITO,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    ComboBoxModel model = clienteService.obtieneModelCliente();
                    ComboBoxModel model1 = clienteService.obtieneModelCliente();
                    jComboBox4.setModel(model);
                    jComboBox5.setModel(model1);

                } else {
                    UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al realizar el alta de cliente "
                        + ex.getMessage(), ex);
            }
            limpiaAltaCliente();
        } else {
            UtilsSwing.mensajeError(leyenda,
                    (JFrame) getParent().
                    getParent().getParent().
                    getParent().getParent());
        }


    }

    public void realizarActualizacionCliente() {
        logger.debug("Realizando actualizacion de un cliente ");
        jTextField4.setText((String) jComboBox7.getSelectedItem());
        String leyenda = validarAltaCliente();
        if (leyenda.trim().equals("")) {
            Cliente clienteDTO = new Cliente();
            clienteDTO.setNombre(jTextField4.getText());
            clienteDTO.setRfc(jTextField3.getText());
            clienteDTO.setDireccion(jTextField5.getText());
            clienteDTO.setTelefono(jTextField8.getText());
            clienteDTO.setEmail(jTextField10.getText());
            clienteDTO.setFechaRegistro(jCalendarButton1.getTargetDate());
            clienteDTO.setCelular(jTextField9.getText());
            clienteDTO.setCiudad(jTextField7.getText());
            clienteDTO.setCp(jTextField6.getText());
            try {
                if (clienteService.updateCliente(clienteDTO)) {
                    UtilsSwing.mensajeExito(Constantes.MENSAJE_EXITO,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    ComboBoxModel model = clienteService.obtieneModelCliente();
                    ComboBoxModel model1 = clienteService.obtieneModelCliente();
                    jComboBox4.setModel(model);
                    jComboBox3.setModel(model1);

                } else {
                    UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al realizar la actualizacion de cliente "
                        + ex.getMessage(), ex);
            }
            limpiaAltaCliente();
        } else {
            UtilsSwing.mensajeError(leyenda,
                    (JFrame) getParent().
                    getParent().getParent().
                    getParent().getParent());
        }
    }

    @Action
    public void seleccionarArchivo1() {
        int returnVal = jFileChooser2.showOpenDialog(this);
        if (returnVal == jFileChooser2.APPROVE_OPTION) {
            File file = jFileChooser2.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextAre
                jTextField21.setText(file.getAbsolutePath());
            } catch (Exception ex) {
                logger.error("Error al seleccionar archivo " + ex.getMessage(), ex);
            }
        } else {
            logger.error("Error al seleccionar archivo ");
        }
    }

    public void altaProveedor() {
        logger.debug("Iniciando la inserción de proveedor");
        String leyenda = validarAltaProveedor(false).trim();
        if (leyenda.equals("")) {
            Proveedor p = new Proveedor();
            p.setCelular(jTextField15.getText());
            p.setCiudad(jTextField20.getText());
            p.setCp(jTextField19.getText());
            p.setDireccion(jTextField18.getText());
            p.setEmail(jTextField16.getText());
            p.setEmpresa(jTextField12.getText());
            if (((String) jComboBox11.getSelectedItem()).equals("Si")) {
                p.setComision_fija(1);
                p.setPorcentaje_comision(new Double(jTextField2.getText()));
            } else {
                p.setComision_fija(0);
                p.setPorcentaje_comision(0);
            }
            try {
                p.setFechaRegistro(Constantes.DD_MM_YYYY.parse(jTextField17.getText()));
            } catch (ParseException ex) {
                logger.error("Error al realizar el parseo de la fecha");
                p.setFechaRegistro(Calendar.getInstance().getTime());
            }
            p.setRfc(jTextField13.getText());
            p.setTelefono(jTextField14.getText());
            try {
                if (proveedorService.insertaProveedor(p, jTextField1.getText())) {
                    UtilsSwing.mensajeExito(Constantes.MENSAJE_EXITO,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    jComboBox2.setModel(proveedorService.obtieneModelProveedor());
                    jComboBox8.setModel(proveedorService.obtieneModelProveedor());
                    jComboBox3.setModel(proveedorService.obtieneModelProveedor());
                    jComboBox10.setModel(proveedorService.obtieneModelProveedor());
                    jComboBox1.setModel(productosService.obtieneMarcas());
                } else {
                    UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al realizar el alta de proveedor "
                        + ex.getMessage(), ex);
            }
            limpiaAltaProveedor();
        } else {
            UtilsSwing.mensajeError(leyenda,
                    (JFrame) getParent().
                    getParent().getParent().
                    getParent().getParent());
        }

    }

    /**
     * Realiza el alta de un proveedor en la base de datos
     */
    public void realizarActualizacionProveedor() {
        logger.debug("Iniciando la actualización de proveedor");
        jTextField12.setText((String) jComboBox8.getSelectedItem());
        String leyenda = validarAltaProveedor(true).trim();
        if (leyenda.equals("")) {
            Proveedor p = new Proveedor();
            p.setCelular(jTextField15.getText());
            p.setCiudad(jTextField20.getText());
            p.setCp(jTextField19.getText());
            p.setDireccion(jTextField18.getText());
            p.setEmail(jTextField16.getText());
            p.setEmpresa(jTextField12.getText());
            try {
                p.setFechaRegistro(Constantes.DD_MM_YYYY.parse(jTextField17.getText()));
            } catch (ParseException ex) {
                logger.error("Error al realizar el parseo de la fecha");
                p.setFechaRegistro(Calendar.getInstance().getTime());
            }
            p.setRfc(jTextField13.getText());
            p.setTelefono(jTextField14.getText());
            if (((String) jComboBox11.getSelectedItem()).equals("Si")) {
                p.setComision_fija(1);
                p.setPorcentaje_comision(new Double(jTextField2.getText()));
            } else {
                p.setComision_fija(0);
                p.setPorcentaje_comision(0);
            }
            try {
                if (proveedorService.updateProveedor(p)) {
                    UtilsSwing.mensajeExito(Constantes.MENSAJE_EXITO,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                    jComboBox2.setModel(proveedorService.obtieneModelProveedor());
                } else {
                    UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                UtilsSwing.mensajeError(Constantes.MENSAJE_ERROR,
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al realizar la actualización de proveedor "
                        + ex.getMessage(), ex);
            }
            limpiaAltaProveedor();
        } else {
            UtilsSwing.mensajeError(leyenda,
                    (JFrame) getParent().
                    getParent().getParent().
                    getParent().getParent());
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private org.sourceforge.jcalendarbutton.JCalendarButton jCalendarButton1;
    private org.sourceforge.jcalendarbutton.JCalendarButton jCalendarButton2;
    private org.sourceforge.jcalendarbutton.JCalendarButton jCalendarButton3;
    private org.sourceforge.jcalendarbutton.JCalendarButton jCalendarButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox11;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que valida el alta de un proveedor
     * @return true si es válida la entrada, false en caso contrario
     */
    public String validarAltaProveedor(boolean esActualizacion) {
        logger.debug("Validando campos alta proveedor");
        StringBuilder builder = new StringBuilder();
        if (jTextField12.getText().equals("")) {
            builder.append("El campo Empresa es necesario. \n");
        }
        if (jTextField13.getText().equals("")) {
            builder.append("El campo RFC es necesario. \n");
        }
        try {
            BigDecimal a =
                    jTextField19.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField19.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo CP debe ser númerico. \n");
        }
        try {
            BigDecimal a =
                    jTextField14.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField14.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo teléfono debe ser númerico. \n");
        }
        try {
            BigDecimal a =
                    jTextField15.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField15.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo celular debe ser númerico. \n");
        }
        if (((String) jComboBox11.getSelectedItem()).equals("Si")) {
            try {
                BigDecimal a =
                        jTextField2.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField2.getText());
                if (a.doubleValue() <= 0) {
                    builder.append("El campo utilidad no puede ser negativo o igual a 0. \n");
                } else if (a.doubleValue() > 100) {
                    builder.append("El campo utilidad no puede ser mayor a 100. \n");
                }
            } catch (NumberFormatException e) {
                builder.append("El campo utilidad debe ser númerico. \n");
            }
        } else {
            jTextField2.setText("0");
        }
        if (jTextField16.getText().equals("")) {
            builder.append("El campo email es necesario. \n");
        }
        if (!esActualizacion) {
            if (jTextField1.getText().equals("")) {
                builder.append("Es necesario seleccionar un archivo. \n");
            } else if (!jTextField1.getText().endsWith(".xls")) {
                builder.append("El formato del archivo no es correcto. \n");
            }
        }
        return builder.toString();
    }

    /**
     * Método que valida el alta de un proveedor
     * @return true si es válida la entrada, false en caso contrario
     */
    public String validarAltaCliente() {
        logger.debug("Validando campos alta proveedor");
        StringBuilder builder = new StringBuilder();
        if (jTextField4.getText().equals("")) {
            builder.append("El campo nombre es necesario. \n");
        }
        if (jTextField3.getText().equals("")) {
            builder.append("El campo RFC es necesario. \n");
        }
        try {
            BigDecimal a =
                    jTextField6.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField6.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo CP debe ser númerico. \n");
        }
        try {
            BigDecimal a =
                    jTextField8.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField8.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo telefono debe ser númerico. \n");
        }
        try {
            BigDecimal a =
                    jTextField9.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField9.getText());
        } catch (NumberFormatException e) {
            builder.append("El campo celular debe ser númerico. \n");
        }
        return builder.toString();
    }

    /**
     * Limpia los campos de alta proveedor
     */
    public void limpiaAltaCliente() {
        logger.debug("Limpiando campos form alta cliente");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");
    }

    /**
     * Limpia los campos de alta proveedor
     */
    public void limpiaAltaProveedor() {
        logger.debug("Limpiando campos form alta proveedor");
        jTextField1.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        jTextField18.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        jTextField14.setText("");
        jTextField15.setText("");
        jTextField16.setText("");
        jTextField17.setText("");
        jTextField2.setText("");
    }

    /**
     * Listener para fecha
     * @param evt 
     */
    private void dateOnlyPopupChanged(java.beans.PropertyChangeEvent evt) {
        if (evt.getNewValue() instanceof Date) {
            setDate((Date) evt.getNewValue());
        }
    }

    /**
     * Validate and set the datetime field on the screen given a date.
     * @param dateTime The datetime object
     */
    public void setDate(Date date) {
        String dateString = "";
        if (date != null) {
            dateString = Constantes.DD_MM_YYYY.format(date);
        }
        jTextField11.setText(dateString);
        jCalendarButton1.setTargetDate(date);
    }

    /**
     * Listener para fecha
     * @param evt 
     */
    private void dateOnlyPopupChangedProveedor(java.beans.PropertyChangeEvent evt) {
        if (evt.getNewValue() instanceof Date) {
            setDateProveedor((Date) evt.getNewValue());
        }
    }

    /**
     * Validate and set the datetime field on the screen given a date.
     * @param dateTime The datetime object
     */
    public void setDateProveedor(Date date) {
        String dateString = "";
        if (date != null) {
            dateString = Constantes.DD_MM_YYYY.format(date);
        }
        jTextField17.setText(dateString);
        jCalendarButton2.setTargetDate(date);
    }

    private void dateOnlyPopupChangedR1(java.beans.PropertyChangeEvent evt) {
        if (evt.getNewValue() instanceof Date) {
            setDateR1((Date) evt.getNewValue());
        }
    }

    /**
     * Validate and set the datetime field on the screen given a date.
     * @param dateTime The datetime object
     */
    public void setDateR1(Date date) {
        String dateString = "";
        if (date != null) {
            dateString = Constantes.DD_MM_YYYY.format(date);
        }
        jTextField22.setText(dateString);
        jCalendarButton3.setTargetDate(date);
    }

    private void dateOnlyPopupChangedR2(java.beans.PropertyChangeEvent evt) {
        if (evt.getNewValue() instanceof Date) {
            setDateR2((Date) evt.getNewValue());
        }
    }

    /**
     * Validate and set the datetime field on the screen given a date.
     * @param dateTime The datetime object
     */
    public void setDateR2(Date date) {
        String dateString = "";
        if (date != null) {
            dateString = Constantes.DD_MM_YYYY.format(date);
        }
        jTextField23.setText(dateString);
        jCalendarButton4.setTargetDate(date);
    }

    @Action
    public void cancelarCliente() {
        limpiaAltaCliente();
    }

    @Action
    public void fechaProveedor() {
        Date fecha = jCalendarButton2.getTargetDate();
        logger.debug("Seleccionando fecha proveedor " + fecha);
        jTextField17.setText(Constantes.DD_MM_YYYY.format(fecha));

    }

    @Action
    public void obtenerProductos() {
        try {
            TableModelProductos model = productosService.obtieneProductosP(
                    (String) jComboBox1.getSelectedItem(),
                    jTextField24.getText().trim().equals("") ? null
                    : jTextField24.getText(),
                    (String) jComboBox10.getSelectedItem(),
                    jTextField25.getText());
            jTable2.setModel(model);
            jTable2.getModel().addTableModelListener(new SeleccionModelListener(model, this));
            jTextField25.setText("");
        } catch (RefaccionariaException ex) {
            logger.error("Error al buscar productos con los criterios " + ex.getMessage(), ex);
        }
    }

    @Action
    public void mostrarPedido() {
        String mensaje = validarPedido();
        if (mensaje.trim().equals("")) {
        } else {
        }

    }

    /**
     * Valida el pedido 
     * @return true si es valido, false en caso contrario
     */
    public String validarPedido() {
        StringBuilder builder = new StringBuilder();
        if (jComboBox4.getSelectedItem() == null
                || ((String) jComboBox4.getSelectedItem()).trim().equals("")) {
            builder.append("Se debe seleccionar un cliente \n");
        }
        /*if (jTextField2.getText().trim().equals("")) {
        builder.append("El campo piezas es necesario \n");
        } else {
        try {
        BigDecimal a =
        jTextField2.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField2.getText());
        } catch (NumberFormatException e) {
        builder.append("El campo piezas debe ser númerico. \n");
        }
        }
        if (jTextField25.getText().trim().equals("")) {
        builder.append("El campo utilidad es necesario \n");
        } else {
        try {
        BigDecimal a =
        jTextField25.getText().trim().equals("") ? BigDecimal.ZERO : new BigDecimal(jTextField25.getText());
        } catch (NumberFormatException e) {
        builder.append("El campo utilidad debe ser númerico. \n");
        }
        }
         */
        return builder.toString();
    }

    @Action
    public void actualizarCatalogo() {
        String validar = validarActualizacion().trim();
        if (validar.equals("")) {
            try {
                if (proveedorService.actualizaCatalogo((String) jComboBox2.getSelectedItem(),
                        jTextField21.getText())) {
                    jComboBox1.setModel(productosService.obtieneMarcas());
                    jTable2.setModel(new DefaultTableModel());
                    UtilsSwing.mensajeExito(Constantes.MENSAJE_EXITO,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                } else {
                    UtilsSwing.mensajeError("Error al realizar la actualización",
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (RefaccionariaException ex) {
                logger.error("Error al actualizar el catalogo " + ex.getMessage(), ex);
            }
        } else {
            UtilsSwing.mensajeError(validar,
                    (JFrame) getParent().
                    getParent().getParent().
                    getParent().getParent());
        }
        jTextField21.setText("");
    }

    public String validarActualizacion() {
        StringBuilder builder = new StringBuilder();
        if (jComboBox2.getSelectedItem() == null) {
            builder.append("Debe seleccionar un proveedor \n");
        }
        if (jTextField21.getText().equals("")) {
            builder.append("Es necesario seleccionar un archivo. \n");
        } else if (!jTextField21.getText().endsWith(".xls")) {
            builder.append("El formato del archivo no es correcto. \n");
        }
        return builder.toString();
    }

    @Action
    public void ventasPorCasa() {
        jComboBox3.setEnabled(true);
        jComboBox5.setEnabled(false);
        jCalendarButton3.setEnabled(true);
        jCalendarButton4.setEnabled(true);
    }

    @Action
    public void ventasPorCliente() {
        jComboBox3.setEnabled(false);
        jComboBox5.setEnabled(true);
        jCalendarButton3.setEnabled(true);
        jCalendarButton4.setEnabled(true);
    }

    @Action
    public void ventasPorFecha() {
        jComboBox3.setEnabled(false);
        jComboBox5.setEnabled(false);
        jCalendarButton3.setEnabled(true);
        jCalendarButton4.setEnabled(true);
    }

    @Action
    public void ventanaEmergente() {
        try {
            ConfirmacionFrame cp = new ConfirmacionFrame(productosService.obtieneProductosTemp(),
                    (String) jComboBox4.getSelectedItem(), this.app);
            app.show(cp);
        } catch (Exception ex) {
            logger.error("Error al ver pantalla de confirmación  " + ex.getMessage(), ex);
        }

    }

    @Action
    public void seleccionarProveedorPedido() {
        try {
            if (jComboBox4.getSelectedItem() != null) {
                jTextField24.setEnabled(true);
                jComboBox1.setEnabled(true);
                jComboBox10.setEnabled(true);
                jTable2.setEnabled(true);
                jButton11.setEnabled(true);
                jButton12.setEnabled(true);
                jTextField25.setEnabled(true);
                try {
                    jTable2.setModel(productosService.obtieneProductosP("Todas las marcas", null, null, null));
                } catch (Exception e) {
                    jTable2.setModel(new DefaultTableModel());
                }
                jTable2.getModel().addTableModelListener(new SeleccionModelListener((TableModelProductos) jTable2.getModel(), this));

                productosService.deleteAllTemp();

            }


        } catch (RefaccionariaException ex) {
            logger.error("Error al seleccionar el proveedor " + ex.getMessage(), ex);
        }
    }

    @Action
    public void seleccionarOperacionCliente() {
        logger.debug("Seleccionando acción cliente");
        String accion = ((String) jComboBox6.getSelectedItem());
        if (accion.trim().equals("Alta")) {
            logger.debug("Seleccionando acción alta");
            componentesAltaCliente();

        } else if (accion.trim().equals("Baja")) {
            logger.debug("Seleccionando acción baja");
            componentesDeleteCliente();
            try {
                jComboBox7.setModel(clienteService.obtieneModelCliente());
            } catch (RefaccionariaException ex) {
                logger.error("Error al obtener el modelo de clientes "
                        + ex.getMessage(), ex);
            }

        } else if (accion.trim().equals("Cambio")) {
            logger.debug("Seleccionando acción cambio");
            componentesUpdateCliente();
            try {
                jComboBox7.setModel(clienteService.obtieneModelCliente());
            } catch (RefaccionariaException ex) {
                logger.error("Error al obtener el modelo de clientes "
                        + ex.getMessage(), ex);
            }
        }

    }

    public void componentesAltaCliente() {
        jLayeredPane2.moveToFront(jPanel16);
        jComboBox7.setVisible(false);
        jTextField4.setVisible(true);
        jTextField5.setEnabled(true);
        jTextField6.setEnabled(true);
        jTextField7.setEnabled(true);
        jTextField8.setEnabled(true);
        jTextField9.setEnabled(true);
        jTextField10.setEnabled(true);
        jTextField3.setEnabled(true);
        limpiaAltaCliente();
    }

    public void componentesUpdateCliente() {
        jLayeredPane2.moveToFront(jPanel14);
        jTextField4.setVisible(false);
        jComboBox7.setVisible(true);
        jTextField5.setEnabled(true);
        jTextField6.setEnabled(true);
        jTextField7.setEnabled(true);
        jTextField8.setEnabled(true);
        jTextField9.setEnabled(true);
        jTextField10.setEnabled(true);
        jTextField3.setEnabled(true);
        limpiaAltaCliente();
    }

    public void componentesDeleteCliente() {
        jLayeredPane2.moveToFront(jPanel14);
        jTextField4.setVisible(false);
        jComboBox7.setVisible(true);
        jTextField5.setEnabled(false);
        jTextField6.setEnabled(false);
        jTextField7.setEnabled(false);
        jTextField8.setEnabled(false);
        jTextField9.setEnabled(false);
        jTextField10.setEnabled(false);
        jTextField3.setEnabled(false);
        limpiaAltaCliente();
    }

    public void componentesAltaProveedor() {
        jLayeredPane3.moveToFront(jPanel17);
        jComboBox8.setVisible(false);
        jTextField12.setVisible(true);
        jTextField18.setEnabled(true);
        jTextField19.setEnabled(true);
        jTextField20.setEnabled(true);
        jTextField13.setEnabled(true);
        jTextField14.setEnabled(true);
        jTextField15.setEnabled(true);
        jTextField16.setEnabled(true);
        jTextField17.setEnabled(true);
        jTextField1.setEnabled(true);
        jComboBox11.setEnabled(true);
        jComboBox11.setSelectedItem("No");
        //jTextField2.setEnabled(true);
        limpiaAltaProveedor();
    }

    public void componentesDeleteProveedor() {
        jLayeredPane3.moveToFront(jPanel15);
        jComboBox8.setVisible(true);
        jTextField12.setVisible(false);
        jTextField18.setEnabled(false);
        jTextField19.setEnabled(false);
        jTextField20.setEnabled(false);
        jTextField13.setEnabled(false);
        jTextField14.setEnabled(false);
        jTextField15.setEnabled(false);
        jTextField16.setEnabled(false);
        jTextField17.setEnabled(false);
        jTextField1.setEnabled(false);
        jComboBox11.setEnabled(false);
        jTextField2.setEnabled(false);
        limpiaAltaProveedor();
    }

    public void componentesUpdateProveedor() {
        jLayeredPane3.moveToFront(jPanel15);
        jComboBox8.setVisible(true);
        jTextField12.setVisible(false);
        jTextField18.setEnabled(true);
        jTextField19.setEnabled(true);
        jTextField20.setEnabled(true);
        jTextField13.setEnabled(true);
        jTextField14.setEnabled(true);
        jTextField15.setEnabled(true);
        jTextField16.setEnabled(true);
        jTextField17.setEnabled(true);
        jTextField1.setEnabled(true);
        jComboBox11.setEnabled(true);
        //jTextField2.setEnabled(true);
        limpiaAltaProveedor();
    }

    @Action
    public void seleccionarOperacionProveedor() {
        logger.debug("Seleccionando acción proveedor");
        String accion = ((String) jComboBox9.getSelectedItem());
        if (accion.trim().equals("Alta")) {
            logger.debug("Seleccionando acción alta proveedor");
            componentesAltaProveedor();

        } else if (accion.trim().equals("Baja")) {
            logger.debug("Seleccionando acción baja proveedor");

            componentesDeleteProveedor();
            try {
                jComboBox8.setModel(proveedorService.obtieneModelProveedor());
            } catch (RefaccionariaException ex) {
                logger.error("Error al obtener el modelo de proveedores "
                        + ex.getMessage(), ex);
            }

        } else if (accion.trim().equals("Cambio")) {
            logger.debug("Seleccionando acción cambio proveedor");
            componentesUpdateProveedor();
            try {
                jComboBox8.setModel(proveedorService.obtieneModelProveedor());
            } catch (RefaccionariaException ex) {
                logger.error("Error al obtener el modelo de proveedores "
                        + ex.getMessage(), ex);
            }
        }
    }

    @Action
    public void obtenerDatosProveedor() {
        try {
            logger.debug("Iniciando los datos de la búsqueda del proveedor ");
            this.proveedor =
                    proveedorService.obtieneDatosProveedor((String) jComboBox8.getSelectedItem());
            llenaCamposProveedor();

        } catch (RefaccionariaException ex) {
            logger.debug("Error al obtener los datos del cliente " + ex.getMessage(),
                    ex);
        }
    }

    @Action
    public void obtenerDatosCliente() {
        try {
            logger.debug("Iniciando los datos de la búsqueda del cliente ");
            this.cliente =
                    clienteService.obtieneDatosCliente((String) jComboBox7.getSelectedItem());
            llenaCamposCliente();

        } catch (RefaccionariaException ex) {
            logger.debug("Error al obtener los datos del cliente " + ex.getMessage(),
                    ex);
        }
    }

    public void llenaCamposCliente() {
        logger.debug("Los datos obtenidos del cliente son: "
                + cliente.toString());
        jTextField5.setText(this.cliente.getDireccion());
        jTextField6.setText(this.cliente.getCp());
        jTextField7.setText(this.cliente.getCiudad());
        jTextField8.setText(this.cliente.getTelefono());
        jTextField9.setText(this.cliente.getCelular());
        jTextField10.setText(this.cliente.getEmail());
        jTextField11.setText(UtilsSwing.FTFECHA.format(this.cliente.getFechaRegistro()));
        jTextField3.setText(this.cliente.getRfc());
    }

    public void llenaCamposProveedor() {
        logger.debug("Los datos obtenidos del cliente son: "
                + this.proveedor.toString());
        jTextField18.setText(this.proveedor.getDireccion());
        jTextField19.setText(this.proveedor.getCp());
        jTextField20.setText(this.proveedor.getCiudad());
        jTextField14.setText(this.proveedor.getTelefono());
        jTextField15.setText(this.proveedor.getCelular());
        jTextField16.setText(this.proveedor.getEmail());
        jTextField17.setText(UtilsSwing.FTFECHA.format(this.proveedor.getFechaRegistro()));
        jTextField13.setText(this.proveedor.getRfc());
        jComboBox11.setSelectedIndex(this.proveedor.getComision_fija());
        jTextField2.setText(Formatter.formatMonto(this.proveedor.getPorcentaje_comision()));
    }

    @Action
    public void generarReporte() {
        if (buttonGroup1.isSelected(jRadioButton1.getModel())) {
            try {
                logger.debug("Generando Reporte de servicios");
                String errores = validarReporteProveedor();
                if (errores.trim().equals("")) {
                    VentasxProveedorDTO ventas = proveedorService.obtieneVentasxClienteFecha((String) jComboBox3.getSelectedItem(),
                            jTextField22.getText(), jTextField23.getText());
                    if (ventas != null && ventas.getProductopedido() != null && !ventas.getProductopedido().isEmpty()) {
                        String ruta = reporteService.ventasxProveedor(ventas);
                        if (ruta != null && !ruta.trim().equals("")) {
                            UtilsSwing.mensajeExito("Reporte generado en: " + ruta,
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        } else {
                            UtilsSwing.mensajeError("Error al generar el reporte",
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        }
                    } else {
                        UtilsSwing.mensajeWarning("No hay ventas en el periodo",
                                (JFrame) getParent().
                                getParent().getParent().
                                getParent().getParent());
                    }
                } else {
                    UtilsSwing.mensajeError(errores,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (Exception ex) {
                UtilsSwing.mensajeError("Error al generar el reporte",
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al generar el reporte de ventas x cliente" + ex.getMessage(), ex);
            }
        } else if (buttonGroup1.isSelected(jRadioButton2.getModel())) {
            try {
                logger.debug("Generando Reporte de servicios");
                String errores = validarReporteCliente();
                if (errores.trim().equals("")) {
                    VentasxClienteDTO ventas = clienteService.obtieneVentasxClienteFecha((String) jComboBox5.getSelectedItem(),
                            jTextField22.getText(), jTextField23.getText());
                    if (ventas != null && ventas.getProductopedido() != null && !ventas.getProductopedido().isEmpty()) {
                        String ruta = reporteService.ventasxCliente(ventas);
                        if (ruta != null && !ruta.trim().equals("")) {
                            UtilsSwing.mensajeExito("Reporte generado en: " + ruta,
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        } else {
                            UtilsSwing.mensajeError("Error al generar el reporte",
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        }
                    } else {
                        UtilsSwing.mensajeWarning("No hay ventas en el periodo",
                                (JFrame) getParent().
                                getParent().getParent().
                                getParent().getParent());
                    }
                } else {
                    UtilsSwing.mensajeError(errores,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (Exception ex) {
                UtilsSwing.mensajeError("Error al generar el reporte",
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al generar el reporte de ventas x cliente" + ex.getMessage(), ex);
            }
        } else if (buttonGroup1.isSelected(jRadioButton4.getModel())) {
            try {
                String errores = validarReporteUtilidad();
                if (errores.trim().equals("")) {
                    logger.debug("Generando Reporte de ventas/utilidad ");
                    List<VentasUtilidadDTO> ventas = clienteService.obtieneUtilidadVentasxCliente(jTextField22.getText(),
                            jTextField23.getText());
                    if (ventas != null && !ventas.isEmpty()) {
                        String ruta = reporteService.ventasUtilidadxCliente(ventas,
                                jTextField22.getText(), jTextField23.getText());
                        if (ruta != null && !ruta.trim().equals("")) {
                            UtilsSwing.mensajeExito("Reporte generado en: " + ruta,
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        } else {
                            UtilsSwing.mensajeError("Error al generar el reporte",
                                    (JFrame) getParent().
                                    getParent().getParent().
                                    getParent().getParent());
                        }
                    }
                } else {
                    UtilsSwing.mensajeError(errores,
                            (JFrame) getParent().
                            getParent().getParent().
                            getParent().getParent());
                }
            } catch (Exception ex) {
                UtilsSwing.mensajeError("Error al generar el reporte",
                        (JFrame) getParent().
                        getParent().getParent().
                        getParent().getParent());
                logger.error("Error al generar el reporte de ventas x cliente" + ex.getMessage(), ex);
            }
        }
    }

    public String validarReporteCliente() {
        StringBuilder builder = new StringBuilder();
        if (jComboBox5.getSelectedItem() == null) {
            builder.append("Debe seleccionar un cliente \n");
        }
        if (jTextField22.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha inicial \n");
        }
        if (jTextField23.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha final \n");
        }
        return builder.toString();
    }

    public String validarReporteProveedor() {
        StringBuilder builder = new StringBuilder();
        if (jComboBox3.getSelectedItem() == null) {
            builder.append("Debe seleccionar un proveedor \n");
        }
        if (jTextField22.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha inicial \n");
        }
        if (jTextField23.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha final \n");
        }
        return builder.toString();
    }

    public String validarReporteUtilidad() {
        StringBuilder builder = new StringBuilder();
        if (jTextField22.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha inicial \n");
        }
        if (jTextField23.getText().trim().equals("")) {
            builder.append("Debe seleccionar la fecha final \n");
        }
        return builder.toString();
    }

    @Action
    public void seleccionaUtilidad() {
        if (((String) jComboBox11.getSelectedItem()).equals("Si")) {
            jTextField2.setEnabled(true);
        } else if (((String) jComboBox11.getSelectedItem()).equals("No")) {
            jTextField2.setEnabled(false);
        }
    }
}
